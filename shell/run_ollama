#!/bin/sh
#
# One-shot ollama query session helper.
#
# The service will be stopped on exit, unless there are other ollama processes
# running in the background.
#
# shellcheck shell=dash

MAX_TRIES=2
PROGNAME="${0##*/}"
SERVICE=ollama

log()
{
	local level="$1"; shift

	printf "$PROGNAME: $level: %s\n" "$@"
}

error()
{
	log ERROR "$@"
}

info()
{
	log INFO "$@"
}

sort_pids()
{
	tr ' ' '\n' | sort
}

auto_kill_service_if_needed()
{
	all_pids="$(pgrep "$SERVICE" | sort_pids)"
	service_pids=$(brew-service-pids.py "$SERVICE")
	if [ "$all_pids" = "$service_pids" ]; then
		info "automatically stopping $SERVICE"
		brew services stop $SERVICE
	fi
}

if [ $# -eq 0 ]; then
	cat <<EOF
usage: $PROGNAME args...

\`args\` is a list of arguments/flags that will be passed directly to
\`ollama run\`.
EOF
fi

# shellcheck disable=SC2034
for i in $(seq $MAX_TRIES); do
	if pgrep -q "$SERVICE"; then
		break
	fi
	brew services start "$SERVICE"
	sleep 2
done
sleep 5
if ! pgrep -q "$SERVICE"; then
	error "$SERVICE not started"
	exit 1
fi

trap auto_kill_service_if_needed EXIT INT TERM
ollama run "$@"
